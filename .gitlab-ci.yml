################################################################################
#
#  This file is part of SplashSync Project.
#
#  Copyright (C) Splash Sync <www.splashsync.com>
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  For the full copyright and license information, please view the LICENSE
#  file that was distributed with this source code.
#
################################################################################

variables:
  DOCKER_DRIVER:     overlay2

################################################################
# Defined Pipeline Stages
stages:
  - Docker
  - Contacts
  - Products
  - Orders
  - Invoices
  - Deploy

################################################################
# Init Docker Images
################################################################

.docker:    &docker
    image:      docker:stable
    stage:      Docker
    when:       manual
    tags:
      - Dedicated-Docker
    services:
      - docker:dind
    script:
      - sh ci/update_images.sh

V12:Docker:
  <<: *docker
  variables:          { ODOO_VERSION:     12 }

V13:Docker:
  <<: *docker
  variables:          { ODOO_VERSION:     13 }

V14:Docker:
  <<: *docker
  variables:          { ODOO_VERSION:     14 }

V15:Docker:
  <<: *docker
  variables:          { ODOO_VERSION:     15 }

################################################################
# Init & Functional Tests
################################################################

.functional:    &functional
    image:      docker:stable
    when:       manual
#    retry:      1
    tags:
      - Dedicated-Docker
#    services:
#      - docker:dind
    before_script:
      - sh ci/before_script.sh
    script:
      - sh ci/start_odoo.sh
      - sh ci/test_odoo.sh
    after_script:
      - sh ci/after_script.sh

################################################################
# Contacts - Functional Tests
################################################################

V12:Contacts:
  <<: *functional
  stage:              Contacts
  variables:          { ODOO_VERSION:     12, PHPUNIT_CONFIG:   phpunit.contacts.xml }
  when:               always

V13:Contacts:
  <<: *functional
  stage:              Contacts
  variables:          { ODOO_VERSION:     13, PHPUNIT_CONFIG:   phpunit.contacts.xml }

V14:Contacts:
  <<: *functional
  stage:              Contacts
  variables:          { ODOO_VERSION:     14, PHPUNIT_CONFIG:   phpunit.contacts.xml }
#  when:               always

V15:Contacts:
  <<: *functional
  stage:              Contacts
  variables:          { ODOO_VERSION:     15, PHPUNIT_CONFIG:   phpunit.contacts.xml }

################################################################
# Products - Functional Tests
################################################################

V12:Products:
  <<: *functional
  stage:              Products
  variables:          { ODOO_VERSION:     12, PHPUNIT_CONFIG:   phpunit.products.xml }

V13:Products:
  <<: *docker
  stage:              Products
  variables:          { ODOO_VERSION:     13, PHPUNIT_CONFIG:   phpunit.products.xml }

V14:Products:
  <<: *docker
  stage:              Products
  variables:          { ODOO_VERSION:     14, PHPUNIT_CONFIG:   phpunit.products.xml }

V15:Products:
  <<: *docker
  stage:              Products
  variables:          { ODOO_VERSION:     15, PHPUNIT_CONFIG:   phpunit.products.xml }

################################################################
# Orders - Functional Tests
################################################################

V12:Orders:
  <<: *functional
  stage:              Orders
  variables:          { ODOO_VERSION:     12, PHPUNIT_CONFIG:   phpunit.orders.xml }

V13:Orders:
  <<: *functional
  stage:              Orders
  variables:          { ODOO_VERSION:     13, PHPUNIT_CONFIG:   phpunit.orders.xml }

V14:Orders:
  <<: *functional
  stage:              Orders
  variables:          { ODOO_VERSION:     14, PHPUNIT_CONFIG:   phpunit.orders.xml }

V15:Orders:
  <<: *functional
  stage:              Orders
  variables:          { ODOO_VERSION:     15, PHPUNIT_CONFIG:   phpunit.orders.xml }

################################################################
# Invoices - Functional Tests
################################################################

V12:Invoices:
  <<: *functional
  stage:              Invoices
  variables:          { ODOO_VERSION:     12, PHPUNIT_CONFIG:   phpunit.invoices.xml }

V13:Invoices:
  <<: *functional
  stage:              Invoices
  variables:          { ODOO_VERSION:     13, PHPUNIT_CONFIG:   phpunit.invoices.xml }

V14:Invoices:
  <<: *functional
  stage:              Invoices
  variables:          { ODOO_VERSION:     14, PHPUNIT_CONFIG:   phpunit.invoices.xml }

V15:Invoices:
  <<: *functional
  stage:              Invoices
  variables:          { ODOO_VERSION:     15, PHPUNIT_CONFIG:   phpunit.invoices.xml }

################################################################
# Build Documentation
################################################################
pages:
    image:      registry.gitlab.com/splashsync/php-console:pages
    stage:      Deploy
    retry:      2
    tags:
      - Dedicated
    ################################################################################
    # Run Test Script
    script:
      # Run Composer to Build Dependencies
      - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh  | bash
      # Build Documentation
      - php vendor/bin/grumphp run --tasks=build-docs
    artifacts:
        paths:
            - public