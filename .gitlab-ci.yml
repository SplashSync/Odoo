################################################################################
#
#  This file is part of SplashSync Project.
#
#  Copyright (C) Splash Sync <www.splashsync.com>
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  For the full copyright and license information, please view the LICENSE
#  file that was distributed with this source code.
#
#  @author Bernard Paquier <contact@splashsync.com>
#
################################################################################

################################################################
# Defined Pipeline Stages
stages:
  - tests
  - deploy

################################################################
# Functional Tests
################################################################

.core_tests:    &core_tests
    image:      docker:stable
    stage:      tests
    tags:
      - Dedicated-Docker
    services:
      - docker:dind
    ################################################################################
    # Install & Configure Environment
    before_script:
      # Init Docker
      - docker info
      # Install Git & Docker Compose
      - apk add --no-cache git docker-compose
      # Load SplashPy Module
      - rm -Rf ../Py-Core
      - git clone --depth=1 https://github.com/SplashSync/PyCore.git ../Py-Core
      - chmod 7777 -Rf ../Py-Core
      # Build Docker Compose
      - mkdir logs
      - docker network create splashsync --attachable
      - docker-compose up -d
    ################################################################################
    # Run Test Script
    script:
      # Wait Until Odoo Container Started
      - docker-compose exec -T toolkit php bin/console
      - docker-compose exec -T toolkit bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' odoo:8069)" != "200" ]]; do echo "Wait for Odoo..."; sleep 10; done'
      - docker-compose logs --tail="2000" odoo >> logs/odoo.init.txt
      # Run Splash Unit tests from Splash Toolkit
      - docker-compose exec -T toolkit php vendor/bin/phpunit -c ${PHPUNIT_CONFIG}
      - docker-compose logs --tail="2000" odoo >> logs/odoo.tests.txt
    ################################################################################
    # Run After Script
    after_script:
      - docker-compose stop
      - docker-compose logs --tail="2000" odoo >> logs/odoo.all.txt
    artifacts:
      paths:
        - logs

tests:products:
  <<: *core_tests
  variables:
    PHPUNIT_CONFIG:   phpunit.products.xml

tests:contacts:
  <<: *core_tests
  variables:
    PHPUNIT_CONFIG:   phpunit.contacts.xml

tests:orders:
  <<: *core_tests
  variables:
    PHPUNIT_CONFIG:   phpunit.orders.xml

tests:invoices:
  <<: *core_tests
  variables:
    PHPUNIT_CONFIG:   phpunit.invoices.xml

#################################################################
## Build Documentation
#################################################################
pages:
    image:    registry.gitlab.com/splashsync/php-console:pages
    stage:    deploy
    tags:
      - Dedicated
    services:
      - docker:dind
    ################################################################################
    # Install & Configure Environment
    before_script:
      # Init Docker
      - docker info
      # Install Git & Docker Compose
      - apk add --no-cache git docker-compose
      # Load SplashPy Module
      - rm -Rf ../Py-Core
      - git clone --depth=1 https://github.com/SplashSync/PyCore.git ../Py-Core
      - chmod 7777 -Rf ../Py-Core
      # Build Docker Compose
      - mkdir logs
      - docker network create splashsync --attachable
      - docker-compose up -d
    ################################################################################
    # Run Test Script
    script:
      # Wait Until Odoo Container Started
      - docker-compose exec -T toolkit php bin/console
      - docker-compose exec -T toolkit bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' odoo:8069)" != "200" ]]; do echo "Wait for Odoo..."; sleep 10; done'
      - docker-compose logs --tail="2000" odoo >> logs/odoo.init.txt
      # Use Splash Toolkit to build Splash Manifest
      - docker-compose exec -T toolkit php bin/console splash:server:manifest
      - docker-compose exec -T toolkit cat splash.json >> splash.json
      - docker-compose exec -T toolkit cat splash.yml >> splash.yml
      # Run Composer to Build Dependencies
      - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh  | bash
      # Build Documentation
      - php vendor/bin/grumphp run --tasks=build-docs
    artifacts:
        paths:
            - public